{"ast":null,"code":"var _jsxFileName = \"/Users/shimizumasato/Downloads/react-guide-material/06_control_and_form/src/130_reminder/start/Todo.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const todosList = [{\n    id: 1,\n    content: '店予約する'\n  }, {\n    id: 2,\n    content: '卵買う'\n  }, {\n    id: 3,\n    content: '郵便出す'\n  }];\n  const [todos, setTodos] = useState(todosList);\n  const [inputVal, setInputVal] = useState('');\n  const addTodo = () => {\n    if (!inputVal) return;\n    const newTodo = {\n      id: Math.floor(Math.random() * 1e5),\n      content: inputVal\n    };\n    setTodos([...todos, newTodo]);\n    setInputVal('');\n  };\n  const deleteTodo = id => {\n    const newTodos = todos.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"\\u5B8C\\u4E86\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: todo.content,\n          children: todo.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Form, {\n      inputVal: inputVal,\n      setInputVal: setInputVal,\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"8Q2q0rO4tlaNckstS8h22Kugj70=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","todosList","id","content","todos","setTodos","inputVal","setInputVal","addTodo","newTodo","Math","floor","random","deleteTodo","newTodos","filter","todo","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","htmlFor","_c","$RefreshReg$"],"sources":["/Users/shimizumasato/Downloads/react-guide-material/06_control_and_form/src/130_reminder/start/Todo.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Form from './components/Form';\r\n\r\nconst Todo = () => {\r\n  const todosList = [\r\n    {\r\n      id: 1,\r\n      content: '店予約する',\r\n    },\r\n    {\r\n      id: 2,\r\n      content: '卵買う',\r\n    },\r\n    {\r\n      id: 3,\r\n      content: '郵便出す',\r\n    },\r\n  ];\r\n  const [todos, setTodos] = useState(todosList);\r\n  const [inputVal, setInputVal] = useState('');\r\n\r\n  const addTodo = () => {\r\n    if (!inputVal) return;\r\n    const newTodo = {\r\n      id: Math.floor(Math.random() * 1e5),\r\n      content: inputVal,\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n\r\n    setInputVal('');\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const newTodos = todos.filter((todo) => {\r\n      return todo.id !== id;\r\n    });\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Reminder</h1>\r\n      {todos.map((todo) => {\r\n        return (\r\n          <div key={todo.id}>\r\n            <button onClick={() => deleteTodo(todo.id)}>完了</button>\r\n            <label htmlFor={todo.content}>{todo.content}</label>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <Form inputVal={inputVal} setInputVal={setInputVal} addTodo={addTodo} />\r\n\r\n      {/* <input\r\n        type='text'\r\n        value={inputVal}\r\n        onChange={(e) => setInputVal(e.target.value)}\r\n      />\r\n      <button onClick={addTodo}>追加</button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,SAAS,GAAG,CAChB;IACEC,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE;EACX,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE;EACX,CAAC,EACD;IACED,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE;EACX,CAAC,CACF;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,SAAS,CAAC;EAC7C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAACF,QAAQ,EAAE;IACf,MAAMG,OAAO,GAAG;MACdP,EAAE,EAAEQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACnCT,OAAO,EAAEG;IACX,CAAC;IACDD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,OAAO,CAAC,CAAC;IAE7BF,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMM,UAAU,GAAIX,EAAE,IAAK;IACzB,MAAMY,QAAQ,GAAGV,KAAK,CAACW,MAAM,CAAEC,IAAI,IAAK;MACtC,OAAOA,IAAI,CAACd,EAAE,KAAKA,EAAE;IACvB,CAAC,CAAC;IAEFG,QAAQ,CAACS,QAAQ,CAAC;EACpB,CAAC;EAED,oBACElB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBjB,KAAK,CAACkB,GAAG,CAAEN,IAAI,IAAK;MACnB,oBACEpB,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACG,IAAI,CAACd,EAAE,CAAE;UAAAe,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvDzB,OAAA;UAAO4B,OAAO,EAAER,IAAI,CAACb,OAAQ;UAAAc,QAAA,EAAED,IAAI,CAACb;QAAO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF5CL,IAAI,CAACd,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CAAC;IAEV,CAAC,CAAC,eAEFzB,OAAA,CAACF,IAAI;MAACY,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA,WAAY;MAACC,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAQxE,CAAC;AAEP,CAAC;AAACrB,EAAA,CA3DID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA6DV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}