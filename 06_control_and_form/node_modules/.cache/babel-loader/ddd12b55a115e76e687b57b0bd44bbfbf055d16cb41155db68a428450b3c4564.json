{"ast":null,"code":"var _jsxFileName = \"/Users/shimizumasato/Downloads/react-guide-material/06_control_and_form/src/110_multi_checkbox/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [fruits, setFruits] = useState([{\n    label: 'Apple',\n    value: 100,\n    checked: false\n  }, {\n    label: 'Banana',\n    value: 200,\n    checked: false\n  }, {\n    label: 'Cherry',\n    value: 300,\n    checked: false\n  }]);\n  const [sum, setSum] = useState(0);\n  const handleChange = e => {\n    const newFruits = fruits.map(fruit => {\n      const newFruit = {\n        ...fruits\n      };\n      if (newFruits.label === e.target.value) {\n        newFruits.checked = !fruit.checked;\n      }\n      return newFruit;\n    });\n    setFruits(newFruits);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [fruits.map(fruit => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: fruit.label,\n          type: \"checkbox\",\n          value: fruit.value,\n          checked: fruit.checked,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: fruit.label,\n          children: fruit.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u5408\\u8A08\\uFF1A\", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"fdO+GU+Fcrl2tNcVRQa3ZEAb+kM=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Example","_s","fruits","setFruits","label","value","checked","sum","setSum","handleChange","e","newFruits","map","fruit","newFruit","target","children","id","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["/Users/shimizumasato/Downloads/react-guide-material/06_control_and_form/src/110_multi_checkbox/start/Example.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst Example = () => {\r\n  const [fruits, setFruits] = useState([\r\n    { label: 'Apple', value: 100, checked: false },\r\n    { label: 'Banana', value: 200, checked: false },\r\n    { label: 'Cherry', value: 300, checked: false },\r\n  ]);\r\n\r\n  const [sum, setSum] = useState(0);\r\n\r\n  const handleChange = (e) => {\r\n    const newFruits = fruits.map((fruit) => {\r\n      const newFruit = { ...fruits };\r\n      if (newFruits.label === e.target.value) {\r\n        newFruits.checked = !fruit.checked;\r\n      }\r\n\r\n      return newFruit;\r\n    });\r\n\r\n    setFruits(newFruits);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {fruits.map((fruit) => {\r\n        return (\r\n          <div>\r\n            <input\r\n              id={fruit.label}\r\n              type='checkbox'\r\n              value={fruit.value}\r\n              checked={fruit.checked}\r\n              onChange={handleChange}\r\n            ></input>\r\n            <label htmlFor={fruit.label}>{fruit.label}</label>\r\n          </div>\r\n        );\r\n      })}\r\n      <div>合計：{sum}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CACnC;IAAEO,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC/C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,CAChD,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG,CAAEC,KAAK,IAAK;MACtC,MAAMC,QAAQ,GAAG;QAAE,GAAGZ;MAAO,CAAC;MAC9B,IAAIS,SAAS,CAACP,KAAK,KAAKM,CAAC,CAACK,MAAM,CAACV,KAAK,EAAE;QACtCM,SAAS,CAACL,OAAO,GAAG,CAACO,KAAK,CAACP,OAAO;MACpC;MAEA,OAAOQ,QAAQ;IACjB,CAAC,CAAC;IAEFX,SAAS,CAACQ,SAAS,CAAC;EACtB,CAAC;EAED,oBACEZ,OAAA;IAAAiB,QAAA,GACGd,MAAM,CAACU,GAAG,CAAEC,KAAK,IAAK;MACrB,oBACEd,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UACEkB,EAAE,EAAEJ,KAAK,CAACT,KAAM;UAChBc,IAAI,EAAC,UAAU;UACfb,KAAK,EAAEQ,KAAK,CAACR,KAAM;UACnBC,OAAO,EAAEO,KAAK,CAACP,OAAQ;UACvBa,QAAQ,EAAEV;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACTxB,OAAA;UAAOyB,OAAO,EAAEX,KAAK,CAACT,KAAM;UAAAY,QAAA,EAAEH,KAAK,CAACT;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAEV,CAAC,CAAC,eACFxB,OAAA;MAAAiB,QAAA,GAAK,oBAAG,EAACT,GAAG;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}